(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{454:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue-的核心、优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-的核心、优点"}},[t._v("#")]),t._v(" vue 的核心、优点")]),t._v(" "),s("ul",[s("li",[t._v("组件化 可以实现页面上功能的复用")]),t._v(" "),s("li",[t._v("数据驱动 会让代码变得简单，不用去操作 DOM，只要更新数据，视图会跟着变化")]),t._v(" "),s("li",[t._v("虚拟 dom 不用频繁操作真实的 DOM（真实 DOM 操作性能很慢） 性能会高一些")])]),t._v(" "),s("h2",{attrs:{id:"v-el-通过-v-el-可以获取到-dom-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-el-通过-v-el-可以获取到-dom-对象"}},[t._v("#")]),t._v(" v-el:通过 v-el 可以获取到 DOM 对象")]),t._v(" "),s("h2",{attrs:{id:"单向数据流-a-能到-b-a-b-反过来不行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单向数据流-a-能到-b-a-b-反过来不行"}},[t._v("#")]),t._v(" 单向数据流 (a 能到 b a->b 反过来不行)")]),t._v(" "),s("ul",[s("li",[t._v("父组件通过 props 向子组件传值 父组件中的数据变了，子组件中 props 数据也跟着变，子组件不能修改 props 里的数据 因为 props 是只读的")]),t._v(" "),s("li",[t._v("特殊情况：如果是引用类型数据，子组件只要不修改数据的地址，是可以在子组件中修改的（可以改属性）")])]),t._v(" "),s("h3",{attrs:{id:"vue-的修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-的修饰符"}},[t._v("#")]),t._v(" vue 的修饰符")]),t._v(" "),s("ol",[s("li",[t._v("事件修饰符：")])]),t._v(" "),s("ul",[s("li",[t._v(".stop 阻止事件继续传播")]),t._v(" "),s("li",[t._v(".prevent 阻止标签默认行为")]),t._v(" "),s("li",[t._v(".self 只当在 event.target 是当前元素自身时触发处理函数")]),t._v(" "),s("li",[t._v(".once 事件将只会触发一次")]),t._v(" "),s("li",[t._v(".sync 当我们想在父组件和子组件之间对某个属性值进行双向绑定时")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("v-model 修饰符:")])]),t._v(" "),s("ul",[s("li",[t._v(".lazy 默认情况下，v-model 同步输入框的值和数据。可以通过这个修饰符，转变为在 change 事件再同步。")]),t._v(" "),s("li",[t._v(".number 自动将用户的输入值转化为数值类型")]),t._v(" "),s("li",[t._v(".trim 自动过滤用户输入的首尾空格")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("键盘事件的修饰符")])]),t._v(" "),s("ul",[s("li",[t._v(".enter 敲击回车触发")])]),t._v(" "),s("h3",{attrs:{id:"mvvm-和-mvc-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-和-mvc-的区别"}},[t._v("#")]),t._v(" MVVM 和 MVC 的区别")]),t._v(" "),s("ol",[s("li",[t._v("MVC:")])]),t._v(" "),s("ul",[s("li",[t._v("model:(数据模型)数据访问层 view:视图 controller:(控制器)业务逻辑层")]),t._v(" "),s("li",[t._v("view 通过一些事件操作去通知 controller controller 去改变 model model 处理数据后通知 view 去更新")]),t._v(" "),s("li",[t._v("开发过程不灵活 一个小的事件操作也要走一遍这个流程")]),t._v(" "),s("li",[t._v("MVC 是单向通信，也就是将 Model 渲染到 View 上，必须通过 Controller 来承上启下")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("MVVM:")])]),t._v(" "),s("ul",[s("li",[t._v("MVVM 是三个单词的缩写 model(数据模型) + view(视图) + viewmodel(公共属性)")]),t._v(" "),s("li",[t._v("view 和 model 没有直接关联 通过 viewmodel 进行通信\n"),s("ul",[s("li",[t._v("model 和 view 就像现实中房东和租客一样，他们是不认识，通过中介 viewmodel")])])]),t._v(" "),s("li",[t._v("好处\n"),s("ul",[s("li",[t._v("数据驱动\n"),s("ul",[s("li",[t._v("数据与页面的双向绑定")])])]),t._v(" "),s("li",[t._v("解耦（降低了耦合性）\n"),s("ul",[s("li",[t._v("由于 model 和 view 是没有关系的，是通过 viewmodel 结合在一起的，所以维护起来很方便")])])])])])]),t._v(" "),s("h2",{attrs:{id:"事件传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件传参"}},[t._v("#")]),t._v(" 事件传参")]),t._v(" "),s("ul",[s("li",[t._v('@click="fn" 在回调函数直接通过参数可以拿到事件对象')]),t._v(" "),s("li",[t._v('@click="fn($event)" 这个时候$event 是固定写法')])]),t._v(" "),s("h2",{attrs:{id:"对-event-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-event-的理解"}},[t._v("#")]),t._v(" 对$event 的理解")]),t._v(" "),s("ul",[s("li",[t._v("在原生 DOM 原生事件中，$event 指的是事件源对象")]),t._v(" "),s("li",[t._v("在组件自定义事件，$event 代表的是子组件抛出的数据")])]),t._v(" "),s("h2",{attrs:{id:"自定义指令-directive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令-directive"}},[t._v("#")]),t._v(" 自定义指令：directive")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("你平时用过自定义指令")]),t._v(" "),s("ul",[s("li",[t._v("v-imgerror 我们公司项目中有的用户头像可能加载报错，可以给他一张默认图片， onerror this.img=默认图片")]),t._v(" "),s("li",[t._v("v-focus 打开带有搜索的页面的时候，想实现自动把光标定位到 input 中")])])]),t._v(" "),s("li",[s("p",[t._v("自定义指令的钩子函数")]),t._v(" "),s("ul",[s("li",[t._v("bind 属性绑定的时候执行 只会有一次")]),t._v(" "),s("li",[t._v("inserted 当前指令所在的元素插入到页面中的时候执行一次")]),t._v(" "),s("li",[t._v("update 当前指令所在的组件中的 data 数据有更新就会执行，可以执行多次")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令的钩子有三个 bind inserted update")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bind inserted 只会执行一次")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update 会反复执行")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'focus'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inserted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'check'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^[a-zA-Z0-9]+$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"v-model-语法糖原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model-语法糖原理"}},[t._v("#")]),t._v(" v-model 语法糖原理")]),t._v(" "),s("p",[t._v("通过 v-bind:value 绑定一个 str 变量，绑定一个 input 事件，每次输入内容时触发 input 事件，\n通过事件对象参数$event.target.value 获得输入的内容,把内容赋给 str 变量\n然后更改 str 变量的值时 input 输入框的内容会发生变化，更改 input 输入框内容时 str 变量也会变")]),t._v(" "),s("h3",{attrs:{id:"keep-alive-缓存组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-缓存组件"}},[t._v("#")]),t._v(" Keep-alive:缓存组件")]),t._v(" "),s("ol",[s("li",[t._v("组件在进行切换的时候默认会进行销毁，如果有一个需求要切换组件后不销毁 保留原状态 就可以用 keepalive 进行缓存")]),t._v(" "),s("li",[t._v("include - 只有名称匹配的组件会被缓存。"),s("br"),t._v("\nexclude - 任何名称匹配的组件都不会被缓存"),s("br"),t._v("\nmax （数字）最多可以缓存多少组件实例")]),t._v(" "),s("li",[t._v("两个钩子函数：activated:进入已缓存的组件时触发 deactivated:离开缓存组件时触发")]),t._v(" "),s("li",[t._v("应用场景：比如用户从商品列表页 去到其他页面，然后再回到商品列表页 希望页面的滚动位置是上一次用户离开的位置")]),t._v(" "),s("li",[t._v("实现方法:给路由外面包裹 keep-alive，让 商品列表 组件切换出去后不被销毁，而是缓存 然后：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("saceY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入的时候给固定的位置")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("saceY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//z轴, y轴, 时间")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///然后处理用户离开之前的滚动位置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deactivated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换出去后赋值")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("saceY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scroll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getScrollY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("h3",{attrs:{id:"vue-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-性能优化"}},[t._v("#")]),t._v(" vue 性能优化")]),t._v(" "),s("ol",[s("li",[t._v("路由懒加载 component:() => import() 按需加载")]),t._v(" "),s("li",[t._v("keepalive 对组件进行缓存")]),t._v(" "),s("li",[t._v("v-show 复用组件")]),t._v(" "),s("li",[t._v("第三方组件库按需引入 比如 element-ui")]),t._v(" "),s("li",[t._v("图片懒加载 v-lazyload 插件")]),t._v(" "),s("li",[t._v("函数式组件(将只展示数据的组件转为函数式组件(标记为 Function))")])]),t._v(" "),s("h2",{attrs:{id:"v-if-和-v-for-为什么要避免使用同一个组件或元素上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-for-为什么要避免使用同一个组件或元素上"}},[t._v("#")]),t._v(" v-if 和 v-for 为什么要避免使用同一个组件或元素上")]),t._v(" "),s("ul",[s("li",[t._v("原因：v-for 的优先级要高 同时作用再一个元素上 每次渲染都会先循环再进行条件判断 会带来性能方面的浪费")]),t._v(" "),s("li",[t._v("比如数据里面有个 isShow 变量 为 true 才去显示他 总不能每次循环都去判断一下 对性能浪费 可以在 computed 里提前过滤")]),t._v(" "),s("li",[t._v("解决：")]),t._v(" "),s("li",[t._v("在外层嵌套 template v-if 再外层判断 再里层循环")]),t._v(" "),s("li",[t._v("如果再循环内部出现条件 可以用计算属性 computed 提前过滤掉不需要显示的项")])]),t._v(" "),s("h2",{attrs:{id:"为什么-data-是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-data-是一个函数"}},[t._v("#")]),t._v(" 为什么 data 是一个函数")]),t._v(" "),s("ol",[s("li",[t._v("Vue 组件可能存在多个实例，如果使用对象定义 data，数据就会共用一个 data 对象，当一个状态发生变化大的时候 另一个也会受到影响")]),t._v(" "),s("li",[t._v("采用函数形式定义 实例被创建的时候每次都执行一次这个函数 所以会每次都创建一个新的 data 对象，指向不同的引用，相互不会影响")]),t._v(" "),s("li",[t._v("为什么跟实例没有这个限制：跟实例在整个应用程序中只有一个 不会创建多个")])]),t._v(" "),s("h2",{attrs:{id:"v-if-和-v-show-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-的区别"}},[t._v("#")]),t._v(" v-if 和 v-show 的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("相同点：v-if,v-show 实现的效果是一样的，都是控制显示和隐藏")])]),t._v(" "),s("li",[s("p",[t._v("不同点:")])]),t._v(" "),s("li",[s("p",[t._v("原理上")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" v-show是通过控制样式的display:none来实现的\n")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" v-if是通过创建和销毁元素来实现的\n")])])])]),t._v(" "),s("li",[s("p",[t._v("适用场景")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("v-show哪怕是false的时候也会创建并隐藏，适合频繁切换(显示隐藏一般用的v-if 对大的组件需要复用的可以用v-show  提高性能)\n")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("v-if如果是false直接不创建，适合切换不频繁的时候\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" nextTick()")]),t._v(" "),s("ul",[s("li",[t._v("应用场景：再 cerated 中进行 DOM 操作一定要放在 Vue.nextTick()的回调函数中。")]),t._v(" "),s("li",[t._v("原因：Vue 在更新 data 之后并不会立即更新 DOM 上的数据，如果修改了 data 中的数据，再马上获取 DOM 上的值，取得的是旧值，把获取 DOM 上值的操作放在$nextTick()里就可以得到更新后的数据")])]),t._v(" "),s("h3",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),s("ol",[s("li",[t._v("vuex 是多个组件用来共享数据的一个状态管理容器")]),t._v(" "),s("li",[t._v("核心概念："),s("br"),t._v("\nstate：存放数据的地方\nMutations：用于修改 state 里的数据 类似于组件里的 methods\nActions：提交 mutations 通过 mutations 修改 state 可以写异步代码\nGetters：将 state 里的数据处理成新的数据 类似于计算属性"),s("br"),t._v("\nModeles：把 store 进行模块化")]),t._v(" "),s("li",[t._v("辅助函数：mapstate mapMutations mapActions mapGetters createNamespateHelpers")]),t._v(" "),s("li",[t._v("vuex 的数据是响应式的，组件可以方便的用 vuex 进行数据存取 但是不能刷新页面会导致数据的丢失 需要结合本地存储实现数据的持久化")]),t._v(" "),s("li",[t._v("项目中 vuex 代码是怎么组织的：store 目录说一下")])]),t._v(" "),s("h3",{attrs:{id:"组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("父子:"),s("br"),t._v("\nprops 父向子\n$emit 子向父\n$parent $children\nref")])]),t._v(" "),s("li",[s("p",[t._v("兄弟："),s("br"),t._v("\nEvent bus"),s("br"),t._v("\n在使用数据的地方 EventBus.$on"),s("br"),t._v("\n在传数据的地方用EventBUs.$emit")])]),t._v(" "),s("li",[s("p",[t._v("隔代："),s("br"),t._v("\n在祖先身上写 provide (依赖注入)\n在任何一个子代中通过 inject 拿数据")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("expoer defaule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//祖先级 提供数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//子孙级别 拿数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("生命周期的概念")])])])]),t._v(" "),s("ul",[s("li",[t._v("组件从创建到销毁的过程称为生命周期")]),t._v(" "),s("li",[t._v("四大阶段 八个钩子函数 ：\n"),s("ol",[s("li",[t._v("初始化： beforeCreate： 组件实列创建了，自身的方法也有了，data 和 methods 数据和方法还没有初始化"),s("br"),t._v("\ncreated： data 和 methods 数据和方法有了 可以发送 ajax 请求获取数据")]),t._v(" "),s("li",[t._v("挂载：beforeMount： 模板已经在内存在编辑完成了 但是还没有渲染到页面"),s("br"),t._v("\nmounted:dom 挂载好了 页面一进来需要操作 dom 可以在这里")]),t._v(" "),s("li",[t._v("更新：beforeUpdate:数据更新了 视图还没更新"),s("br"),t._v("\nupdated:数据和视图都是最新的")]),t._v(" "),s("li",[t._v("销毁：beforeDestroy：实例的 data 和 methods 还可以用销毁前(清除定时器，事件)"),s("br"),t._v("\ndestroyed：组件已经销毁了 组件中的实例和方法都无法使用了")])])])]),t._v(" "),s("h3",{attrs:{id:"vue-的父组件和子组件生命周期执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-的父组件和子组件生命周期执行顺序"}},[t._v("#")]),t._v(" Vue 的父组件和子组件生命周期执行顺序")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("初始化和挂载过程"),s("br"),t._v("\n父 beforeCreate -> 父 created -> 父 beforeMount -> 子 beforeCreate -> 子 created -> 子 beforeMount -> 子 mounted -> 父 mounted")])]),t._v(" "),s("li",[s("p",[t._v("更新过程"),s("br"),t._v("\n父 beforeUpdate -> 子 beforeUpdate -> 子 updated -> 父 updated")])]),t._v(" "),s("li",[s("p",[t._v("销毁过程"),s("br"),t._v("\n父 beforeDestroy -> 子 beforeDestroy -> 子 destroyed -> 父 destroyed")]),t._v(" "),s("h3",{attrs:{id:"v-model-底层原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model-底层原理"}},[t._v("#")]),t._v(" v-model 底层原理:")]),t._v(" "),s("ul",[s("li",[t._v("在输入框给 v-bind:value 绑定一个 str 变量，绑定一个 input 事件，每次输入内容都会触发 input 事件，")]),t._v(" "),s("li",[t._v("通过事件对象参数$event.target.value 获取到输入的内容，把内容赋给 str 变量")]),t._v(" "),s("li",[t._v("此时修改 str 变量的值输入框的内容会发生变化，修改输入框的内容 str 变量也会跟着变")])])])]),t._v(" "),s("h2",{attrs:{id:"路由守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[t._v("#")]),t._v(" 路由守卫")]),t._v(" "),s("h3",{attrs:{id:"全局守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局守卫"}},[t._v("#")]),t._v(" 全局守卫")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局路由前置守卫")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路由进入之前触发")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可做权限控制")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to：到哪去  from:从哪来")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'触发路由前置守卫'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局路由后置首位")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由进入之后触发")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可做登录后弹出欢迎提示等")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 场景：判断用户是否登录 如果未登录 且当前处于非登录页面 则自动跳转到登录页")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'触发路由后置守卫'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"路由独享守卫-可以直接在路由配置上定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由独享守卫-可以直接在路由配置上定义"}},[t._v("#")]),t._v(" 路由独享守卫 :可以直接在路由配置上定义")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeEnter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to from next 三个参数")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//next() 通过")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳转不到user路由")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件内置守卫-在组件内执行的钩子函数-写在组件里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件内置守卫-在组件内执行的钩子函数-写在组件里"}},[t._v("#")]),t._v(" 组件内置守卫:在组件内执行的钩子函数(写在组件里)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouterEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再进入组件对应的路由时被调用")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不能获取组件实例this 因为该组件执行时，组件实例还没创建")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写next() 才能进入该组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouterUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在当前路由改变但组件被复用时调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRoureLeave")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 离开该组件对应的路由时会被调用")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应用场景:比如拼多多提示就差0.01分就能拆红包了 确定要离开吗")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next() 写这个才能离开")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"vue-路由的两种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-路由的两种模式"}},[t._v("#")]),t._v(" vue 路由的两种模式：")]),t._v(" "),s("ol",[s("li",[t._v("出现原因：vue 项目是单页面应用 只有一个 html 文件 切换页面要让访问的 url 发生变化 又不能让 html 重新加载 所以 VueRouter 提供了两种加载和跳转方式")]),t._v(" "),s("li",[t._v("hash:hash 模式是把前端路由的路径用#拼接在真实路径之后的，当#后面的路径发生变化时 浏览器不会重新发起请求而是会触发 hashchange 事件")]),t._v(" "),s("li",[t._v("history 模式：是通过 H5 新增的 api：pushState()和 replaceState()这两个 API 可以在不进行刷新的情况下，操作浏览器的历史纪录。唯一不同的是，前者是新增一个历史记录，后者是直接替换当前的历史记录")])]),t._v(" "),s("h3",{attrs:{id:"router-和-route-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#router-和-route-的区别"}},[t._v("#")]),t._v(" router 和 route 的区别:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("router")]),t._v(" $router 是 VueRouter 的实例对象，它包含所有的路由，用来实现路由之间跳转，以及钩子函数 beforeEach,afterEach")]),t._v(" "),s("li",[s("strong",[t._v("route")]),t._v(" 是路由信息对象，每一个路由都会有一个 route 对象，主要包含路由的一些基本信息比如 params.query")])]),t._v(" "),s("h2",{attrs:{id:"路由传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由传参"}},[t._v("#")]),t._v(" 路由传参")]),t._v(" "),s("ol",[s("li",[t._v("params 传参:path:'/home/:id'(通过/传参) 接收参数： this.$route.params.id")]),t._v(" "),s("li",[t._v("query 传参: '/home?id=10'(通过?传参) 接收参数： this.$route.query.id")])]),t._v(" "),s("h3",{attrs:{id:"路由传值的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由传值的区别"}},[t._v("#")]),t._v(" 路由传值的区别")]),t._v(" "),s("ul",[s("li",[t._v("params 穿的参数刷新页面就会丢失 query 参数不会丢失")]),t._v(" "),s("li",[t._v("query 在浏览器地址栏中显示参数，params 不显示")])])])}),[],!1,null,null,null);a.default=e.exports}}]);