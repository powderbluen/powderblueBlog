(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{452:function(t,e,v){"use strict";v.r(e);var a=v(14),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"vue3-相关的-ui-组件库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue3-相关的-ui-组件库"}},[t._v("#")]),t._v(" vue3 相关的 UI 组件库")]),t._v(" "),v("ol",[v("li",[t._v("PC 端 element plus https://element-plus.gitee.io/zh-CN/")]),t._v(" "),v("li",[t._v("PC 端 ant design vue https://antdv.com/docs/vue/introduce-cn/")]),t._v(" "),v("li",[t._v("移动端 vant https://vant-contrib.gitee.io/vant/#/zh-CN")])]),t._v(" "),v("h3",{attrs:{id:"为什么发明-vue3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么发明-vue3"}},[t._v("#")]),t._v(" 为什么发明 vue3")]),t._v(" "),v("ol",[v("li",[t._v("vue2 用的是 option api 选项 api 缺点是代码过于松散 要完成一个功能需要一会儿在 data,一会儿在 methods -> composition api 组合式 api")]),t._v(" "),v("li",[t._v("响应式实现底层用的是 Object.defineProperty 这个 api 是对属性进行劫持 万一对象有 100 个属性 需要不停的遍历和递归，并且考虑性能直接让数组的索引操作以及对象的后添加的属性不是响应式，为了解决这个问题，vue2 还搞了一个$set -> 把底层变成 Proxy 对整个对象进行劫持")])]),t._v(" "),v("h3",{attrs:{id:"vue3-的新特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue3-的新特性"}},[t._v("#")]),t._v(" vue3 的新特性")]),t._v(" "),v("ol",[v("li",[t._v("options api -> composition api")]),t._v(" "),v("li",[t._v("Object.defineProperty -> Proxy")]),t._v(" "),v("li",[t._v("template 中可以有多个根标签")]),t._v(" "),v("li",[t._v("所有的 api 都是按需引入的，可以实现 tree shaking 优化")]),t._v(" "),v("li",[t._v("vue3 有一个新的前端构建工具叫 vite,更快")]),t._v(" "),v("li",[t._v("代码都是在 setup 里面写，没有 this")]),t._v(" "),v("li",[t._v("没有 event bus,可对用 mitt 第三方库替代")]),t._v(" "),v("li",[t._v("vue3 推荐用 typscript")])]),t._v(" "),v("h3",{attrs:{id:"为什么-vite-更快"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么-vite-更快"}},[t._v("#")]),t._v(" 为什么 vite 更快")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("用的是浏览器本来就支持的 esm 模块化，不用打包")])]),t._v(" "),v("li",[v("p",[t._v("构建的时候是按需方式"),v("br"),t._v("\nyarn create vite"),v("br"),t._v("\ncomposition api 组合式 api 的好处")])]),t._v(" "),v("li",[v("p",[t._v("完成同样的功能的逻辑都是写在一起")])]),t._v(" "),v("li",[v("p",[t._v("可以抽出来做成一个 hook (use 开头的)"),v("br"),t._v("\nvueuse")])])]),t._v(" "),v("h3",{attrs:{id:"setup-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#setup-特点"}},[t._v("#")]),t._v(" setup 特点")]),t._v(" "),v("ol",[v("li",[t._v("比 beforeCreate 更早")]),t._v(" "),v("li",[t._v("里面没有 this")]),t._v(" "),v("li",[t._v("自动执行")])]),t._v(" "),v("h3",{attrs:{id:"reactive-vs-ref"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#reactive-vs-ref"}},[t._v("#")]),t._v(" reactive vs ref")]),t._v(" "),v("ol",[v("li",[t._v("ref 用于基本数据类型和复杂数据类型")]),t._v(" "),v("li",[t._v("reactive 只能用于复杂数据\n基于性能考虑 推荐只用 ref")])]),t._v(" "),v("h3",{attrs:{id:"ref"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),v("ol",[v("li",[t._v("在模板中不需要加 value")]),t._v(" "),v("li",[t._v("在 js 中需要加")])]),t._v(" "),v("h3",{attrs:{id:"watch-watcheffect"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#watch-watcheffect"}},[t._v("#")]),t._v(" watch,watchEffect")]),t._v(" "),v("ol",[v("li",[t._v("watch 需要显式指定到底监视谁 并且默认第一次没效果，需要 immediate:true,对象需要 deep:true")]),t._v(" "),v("li",[t._v("watchEffect 不需要")])]),t._v(" "),v("h3",{attrs:{id:"钩子函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[t._v("#")]),t._v(" 钩子函数")]),t._v(" "),v("p",[t._v("setup -> ajax -> 相当于 vue2 中的 created\nonMounted -> 操作 dom --\x3e mounted\nonUpdated -> 数据更新之后，可以拿最新的 DOM --\x3e updated\nonUnMounted -> 移除 DOM 事件和定时器 -> beforeDestroy")]),t._v(" "),v("h3",{attrs:{id:"组件通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),v("ol",[v("li",[t._v("父向子 props defineProps")]),t._v(" "),v("li",[t._v("子向父 defineEmits")]),t._v(" "),v("li",[t._v("兄弟组件 mitt")]),t._v(" "),v("li",[t._v("隔代 provide(祖先组件) inject(在后代中任意一层)")]),t._v(" "),v("li",[t._v("任意组件 vuex pinia")])]),t._v(" "),v("h3",{attrs:{id:"torefs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#torefs"}},[t._v("#")]),t._v(" toRefs")]),t._v(" "),v("p",[t._v("// 使用场景: 如果对一个响应数据, 进行解构 或者 展开, 会丢失他的响应式特性,这个时候可以用到 toRefs")]),t._v(" "),v("ul",[v("li",[t._v("vue3 没有过滤器 filters")])])])}),[],!1,null,null,null);e.default=i.exports}}]);